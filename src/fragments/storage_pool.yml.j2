---
# Copyright (c) The Kowabunga Project
# Apache License, Version 2.0 (see LICENSE or https://www.apache.org/licenses/LICENSE-2.0.txt)
# SPDX-License-Identifier: Apache-2.0

{%- import "src/oas.macros.yml.j2" as oas with context %}

components:
  schemas:
{{ oas.SchemaBaseResource(resources.pool, ['name', 'pool', 'agents']) }}
{{ oas.StringProperty('pool', 'Ceph pool name') }}
{{ oas.StringProperty('ceph_address', 'Ceph Monitor(s) address or FQDN', default='localhost') }}
{{ oas.IntProperty('ceph_port', 'Ceph Monitor(s) port (default 3300)', default=3300) }}
{{ oas.StringProperty('ceph_secret_uuid', 'The libvirt secret UUID for CephX authentication') }}
{{ oas.ObjectProperty('cost', 'Cost associated to the storage pool', resources.cost.schema) }}
{{ oas.StringArrayProperty('agents', 'a list of existing remote agents managing the storage pool') }}

  parameters:
{{ oas.PathParamID(resources.pool) }}
{{ oas.StringQueryParam(resources.pool.paramSchema, resources.pool.paramId, "Storage pool ID (optional, region's default if unspecified)") }}

paths:
  /pool:
{{ oas.List(resources.pool, [resources.pool.tag]) }}

  /pool/{{ '{' + resources.pool.paramId + '}' }}:
{{ oas.RUD(resources.pool, [resources.pool.tag], [resources.pool.paramSchema]) }}

  /pool/{{ '{' + resources.pool.paramId + '}' }}/volumes:
{{ oas.Parameters([resources.pool.paramSchema]) }}
{{ oas.GetAll('List' + resources.pool.schema + 'Volumes', resources.volume.desc, [resources.pool.tag, resources.volume.tag], True) }}

  /pool/{{ '{' + resources.pool.paramId + '}' }}/template:
{{ oas.Parameters([resources.pool.paramSchema]) }}
{{ oas.Create('Create' + resources.template.schema, resources.template.schema, resources.template.desc, [resources.pool.tag, resources.template.tag]) }}

  /pool/{{ '{' + resources.pool.paramId + '}' }}/template/{{ '{' + resources.template.paramId + '}' }}/default:
{{ oas.Parameters([resources.pool.paramSchema, resources.template.paramSchema]) }}
{{ oas.Patch('Set' + resources.pool.schema + 'Default' + resources.template.schema, resources.pool.desc, 'setting of default template', [resources.pool.tag, resources.template.tag]) }}

  /pool/{{ '{' + resources.pool.paramId + '}' }}/templates:
{{ oas.Parameters([resources.pool.paramSchema]) }}
{{ oas.GetAll('List' + resources.pool.schema + 'Templates', resources.template.desc, [resources.pool.tag, resources.template.tag], True) }}
